version: "3"

services:
  db-postgres:
    env_file:
      - .env
    image: postgres:16-alpine3.17
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  auth-service:
    env_file:
      - .env
    build:
      context: backend/auth-service
      dockerfile: Dockerfile
    volumes:
      - ./backend/auth-service:/backend
    environment:
      - POSTGRES_HOST=db-postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=5432
    command: >
      sh -c 
      "python manage.py makemigrations && python manage.py migrate &&
      gunicorn --bind 0.0.0.0 -p 8000 backend.wsgi:application"
    depends_on:
      - db-postgres

  shop-service:
    env_file:
      - .env
    build:
      context: backend/shop-service
      dockerfile: Dockerfile-prod
    environment:
      - POSTGRES_HOST=db-postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=5432
      - GRAPHIQL=false
      - AUTH_HOST=nginx
    depends_on:
      - auth-service

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile-prod
    volumes:
      - ./nginx/conf/nginx-prod.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logs:/etc/nginx/logs
    ports:
      - "80:80"
    depends_on:
      - shop-service

volumes:
  postgresql-data:
